version: '3.8'

services:
    django: &django
        build:
            context: .
            dockerfile: ./compose/production/django/Dockerfile
        image: {{ cookiecutter.project_slug }}_production_django
        container_name: django
        depends_on:
            - postgres
        volumes:
            - .:/app
        env_file:
            - ./.envs/.production/.django
            - ./.envs/.production/.postgres
        command: /start

    postgres:
        build:
            context: .
            dockerfile: ./compose/production/postgres/Dockerfile
        image: {{ cookiecutter.project_slug }}_production_postgres
        container_name: postgres
        volumes:
            - production_postgres_data:/var/lib/postgresql/data
            - production_postgres_data_backup:/backup
        env_file:
            - ./.envs/.production/.postgres

    nginx:
        build:
            context: .
            dockerfile: ./compose/production/nginx/Dockerfile
        image: {{ cookiecutter.project_slug }}_production_nginx
        depends_on:
            - django
        volumes:
            - ./compose/production/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./certbot/conf:/etc/nginx/ssl
            - ./certbot/data:/var/www/certbot
        ports:
            - 80:80/tcp
            - 443:443/tcp
            {%- if cookiecutter.celery == 'y' %}
            - 5555:5555/tcp
            {%- endif %}

    # certbot:
    #     image: certbot/certbot:latest
    #     command: certonly --webroot --webroot-path=/var/www/certbot --email {{ cookiecutter.email }} --agree-tos --no-eff-email -d testing.ezequielcavallo.com.ar -d {{ cookiecutter.domain }} -d www.{{ cookiecutter.domain }}
    #     volumes:
    #       - ./certbot/conf:/etc/letsencrypt
    #       - ./certbot/logs:/var/log/letsencrypt
    #       - ./certbot/data:/var/www/certbot

    redis:
        image: redis:6.0
        container_name: redis

    celeryworker:
        <<: *django
        image: {{ cookiecutter.project_slug }}_production_celeryworker
        container_name: celeryworker
        depends_on:
          - redis
          - postgres
        ports: []
        command: /start-celeryworker


    celerybeat:
        <<: *django
        image: {{ cookiecutter.project_slug }}_production_celerybeat
        container_name: celerybeat
        depends_on:
            - redis
            - postgres
        ports: []
        command: /start-celerybeat

    flower:
        <<: *django
        image: {{ cookiecutter.project_slug }}_production_flower
        container_name: flower
        ports:
            - "5555:5555"
        command: /start-flower

volumes:
    production_postgres_data: {}
    production_postgres_data_backup: {}
